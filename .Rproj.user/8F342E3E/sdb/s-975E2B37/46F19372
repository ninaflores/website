{
    "collab_server" : "",
    "contents" : "---\ntitle: \"EDA Project\"\nauthor: \"Nina Flores, nmf538\"\ndate: \"10/20/2019\"\noutput:\n  html_document: default\n  pdf_document: default\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n\n```{r global_options, include=FALSE}\nlibrary(knitr)\nopts_chunk$set(fig.align=\"center\", fig.height=5, message=FALSE, fig.width=8,tidy.opts=list(width.cutoff=60),tidy=TRUE)\n```\n\n\n\n\n<p style=\"color:orange\">I obtained two datasets containing information about recent movies. As an avid movie goer, who is a proud AMC A-list member and an alumni of Moviepass (may it rest in peace), I was interested in seeing the relationships between various movie production companies, actors, budgets, genres, and success in the box office. Both datasets were obtained from kaggle (movies from Daniel Grijalva and IMDb from PrompCloud). The IMDb dataset contains information from 2006-2016 for the 1,000 most popular movies and 12 variables including rank, title, genre, description, actors, year, runtime, votes, rating, revenue, and metascore. The movies dataset contains 6820 movies in the dataset (220 movies per year, 1986-2016) and 15 variables, including budget, company, country, director, genre, gross revenue, rating, release date, runtime, IMDb score, votes, star, writer and year. I expect to see associations between the IMDb scores/metascores and the gross revenue generated by the films. I expect the movies with higher budgets to also be associated with higher revenues.</p>\n\n```{r}\nlibrary(tidyverse)\nlibrary(reshape2)\n IMD <- read.csv(\"~/Downloads/IMDB-Movie-Data.csv\")\n IMD %>% glimpse()\n \n  movies <- read.csv(\"~/Downloads/movies.csv\")\n head(movies)\n \n```\n##Tidying\n```{r}\n\n IMD2 <- IMD %>% separate_rows(Actors,sep=\", \")%>% glimpse()\nIMD3 <- IMD2 %>% separate_rows(Actors,sep=\",\")\nIMD4 <- IMD3 %>% separate_rows(Genre, sep=\",\")%>% glimpse()\nmovies2 <- movies %>% separate(released, into = c(\"year\",\"month\",\"day\"))\nmovie <-movies2 %>%rename(Title =name)\nmovie2 <-movie%>%rename(Year = year)\nmovie2$Year <- as.numeric(as.character(movie2$Year))\n\n\n```\n\n<p style=\"color:orange\">Since these datasets were found from separate entities, it was important to first tidy each of them, so that they could easily be joined. In the IMD dataset, there were two variables that contained lists of information. These included the actors and genre categories. These lists were separated so that every genre had its own row as did every actor. A similar separation was used in the movies dataset to separate the day, month, and year of the released date into different columns. Having a year column will be important to the future joining steps. In the movies dataset, the \"name\" column was renamed to \"Title\" and \"year\" to \"Year,\" which was then converted to numeric rather than categorical to match the IMD set which will also be important for joining.</p>\n\n\n```{r}\nmovies3 <- movies2 %>% pivot_longer(cols= c(\"year\",\"month\", \"day\"), names_to = \"released\")\nmovies4<- movies3 %>% pivot_wider(names_from=\"released\",values_from=\"value\")\n\n\n\n\n```\n<p style=\"color:orange\">This code was used to demonstrate the ability to use the functions pivot_longer() and pivot_wider(). The first step put day, month, and year back into a single column, and the second separates them again.</p>\n\n##Joining\n```{r}\n\ndoublefeature <- full_join(movie2,IMD4, by = c(\"Title\",\"Year\"))%>% na.omit()%>% glimpse()\n\ndoublefeature_1 <- unite(doublefeature,\"Actors\", \"Actors\",\"star\", sep = \", \", remove = T)%>% separate_rows(Actors,sep=\", \")\n\n```\n<p style=\"color:orange\">I used a full join on both \"Title\" and \"Year\" because I wanted my ending dataset include the movies that had information in both the movie and IMDb datasets. It was important to incorporate \"Year\" into the by function, because the dataset contains remakes that would otherwise be seen as the same movie, if I only joined by Title. I then removed all NA's so that I would be left with a dataset that contained distinct movies with all the variables present in each dataset. Potential problems with this join is the high number of cases that were dropped, shrinking our sample size. However, I think it will be more meaningful for the comparisions if the movies have observations for every variable listed. Since the datasets had some overlapping variables, I combined them where they had differences label, like in the actors vs. stars columns.</p>\n\n##Summarizing\n```{r}\n\ndoublefeature_2 <-doublefeature_1 %>% select(-c(\"director\", \"Rank\", \"Rating\", \"votes\", \"genre\")) \n\n\ndoublefeature_3 <- doublefeature_2 %>% filter(budget != 0)\ndoublefeature_4 <- doublefeature_3 %>% mutate(Profit = (gross - budget ))\n\n\ndoublefeature_5 <- doublefeature_4%>% filter(rating == c(\"R\", \"PG-13\", \"PG\", \"G\"))\n\n\n\n\ndf <- doublefeature_5 %>% group_by(Genre, rating) %>% mutate(Actors=paste(unlist(Actors),collapse=\", \" ))%>%\n  distinct(df, Title, Genre, .keep_all = TRUE) %>%\n  arrange(desc(Profit)) %>% glimpse()\n\nmaxminmeanProf <-doublefeature_5 %>% summarize(maxprof = max(Profit), minprof = min(Profit), mean(Profit))\nmaxminmeanProf\nmaxProf <- doublefeature_5%>% filter(Profit == 523507625)%>% glimpse()\nminProf <- doublefeature_5%>% filter(Profit == -176921900)%>% glimpse()\n```\n<p style=\"color:orange\">I used the select function to remove the redundant columns including: \"director\", \"Rank\", \"Rating\", and \"votes\". I then used the mutate function to create a new column for the profit, which was calculated by subtracting the gross earnings of the movie and subtracting the movie's budget. Some movies did not report their budgets so I filtered those out to avoid  reporting higher profits than there actually was. After generating the Profit, column I found that overall max and min profits to be $523,507,625 coming from Avatar and -$176,921,900 coming from John Carter. The overall mean for this new profit column is $31,776,255.</p> \n\n\n```{r}\nGenresOfInterest <- c(\"Action\", \"Comedy\", \"Romance\")\ndf_summaries <- df %>% filter(Genre %in% GenresOfInterest)\n\ndf_summaries %>% summarize(n= n()) %>% arrange(desc(n))\n\n\n df_summaries %>% summarize_if(is.numeric, mean, na.rm = TRUE ) %>% arrange(desc(Profit))\n\n df_summaries %>% summarize_if(is.numeric, max, na.rm = TRUE)\n \n df_summaries%>% summarize_if(is.numeric,min, na.rm = TRUE )\n \nwhat <- df_summaries%>% filter(score == 1.9) %>% glimpse()\n\n\n```\n\n\n\n<p style=\"color:orange\">I was interested in comparing genres together, however, that is difficult to do when there are 57 different categories. I used filter to narrow these down to the three I found most interesting: Action, Comedy, and Romance. I also filtered out ratings that weren’t G, PG, PG-13, and R because the datasets were not uniform in what they determined to be unrated vs. not-rated etc. This filtering was important because I wanted to group by genre and rating for summary statistics. I first looked at the count and Action movies across the boards overwhelm the amounts of movies in Romance and Comedy.  Action-PG-13 movies alone was almost double and other of the genre-rating combinations with 154 films. Notably, a bulk of comedies were rated R at 87. I looked at the mean, the maximum, and the minimum for each rating of each genre and arranged by the maximum mean profit. The highest maxmium mean profit came from PG comedies at $76,128,321and the lowest came from PG-13 romances at $13,578,523. By looking at the minimum values across the numeric variables in the grouping, I found that the lowest IMDb score came from a PG-13 comedy at 1.9. The title of that movie ended up being “Disaster Movie” which seemed fitting.</p> \n\n\n\n\n##More summarizing\n```{r}\n\ndf2 <- doublefeature_5 %>% group_by(Actors) %>% mutate(Genre=paste(unlist(Genre),collapse=\", \" ))%>%\n  distinct(df, Title, Actors, .keep_all = TRUE) \n  \n\nActorsOfInterest <- c( \"Meryl Streep\", \"Nicolas Cage\", \"Tom Cruise\", \"Tom Hanks\", \"Nicole Kidman\", \"Leonardo DiCaprio\", \"Denzel Washington\", \"Julia Roberts\", \"Morgan Freeman\", \"Johnny Depp\", \"Angelina Jolie\", \"Reese Witherspoon\")\ndf_summaries_Act <- df2  %>% filter(Actors %in% ActorsOfInterest)\n\ndf_summaries_Act %>% summarize(n= n()) %>% arrange(desc(n))\n\n\n\n```\n<p style=\"color:orange\">Now let’s look at some specific actors and see how their movies size up. I compiled a list of 12 of my favorite actors, and actors I thought would be prominent in the 10 year span that these movie datasets were generated from. By counting the number of roles an actor had, and arranging in descending order, it is easy to see that Johnny Depp, Denzel Washington, and Tom Hanks were very busy in these years with 10, 8, and 8 films reported respectively.</p>\n\n```{r}\ndf_summaries_Act %>% summarize_if(is.numeric, mean, na.rm = TRUE ) %>% arrange(desc(Profit))\n\n df_summaries_Act %>% summarize_if(is.numeric, max, na.rm = TRUE)\n \n df_summaries_Act %>% summarize_if(is.numeric,min, na.rm = TRUE )\n \nReese <- df2 %>%filter(Actors == \"Reese Witherspoon\") %>% glimpse()\n```\n\n<p style=\"color:orange\">Reese Witherspoon had the highest mean profit associated with her movies at $69,323,397– over double the average mean profit for all movies found earlier. These profits are coming from the movies: This Means War (2012), Wild (2014), and Sing(2016), with Sing really driving this average upwards. Notably, Leonardo DiCaprio starred in the movies with the highest average score (8.18) and metascore (72.5) – which may help understand his Oscar in 2016. He also was in movies associated with the highest budgets on average at $100,000,000, which also may be translating to these higher scores.</p>\n\n```{r}\n df_summaries_Act %>% mutate(gross= log(gross), budget=log(budget), Profit = gross-budget)%>% summarize_if(is.numeric, mean, na.rm = TRUE ) %>% arrange(desc(Profit)) \n\n   df2 %>%filter(Actors == \"Nicole Kidman\") %>% glimpse()\n\n\n```\n\n <p style=\"color:orange\">Even if we transform the budgets and gross revenues, Reese Witherspoon is still featured at the top of profits. Nicole Kidman is found at the bottom at $10,236,936 average profits from the two movies Australia (2007) and The Golden Compass (2008). These movies also had the lowest average IMDb score at 6.35, but the lowest average metascore belongs to Nicolas Cage at 50.5.</p>\n\n\n\n##Displaying\n```{r}\n\ndoublefeature_2 %>% summarize(Metacritic_Score= mean(Metascore))\ndoublefeature_2$Metacritic_Score <- ifelse(doublefeature_2$Metascore<mean(doublefeature_2$Metascore),\"Low (Below the Mean)\",\"High(Above the Mean)\")\n\ndoublefeature_3 <- doublefeature_2%>% filter(rating == c(\"R\", \"PG-13\", \"PG\", \"G\"))\n\n\n\nggplot(doublefeature_3, aes(x = rating, y =Revenue..Millions. , fill= Metacritic_Score))+\n  geom_bar(stat=\"summary\",fun.y=\"mean\", position=\"dodge\")+\n  geom_errorbar(stat=\"summary\",position=\"dodge\")+ xlab(\"Rating\")+ggtitle(\"Mean Revenue Per Rating Category\")+ scale_fill_brewer(palette = \"Spectral\")+theme_dark()\n\n```\n<p style=\"color:orange\">For this first graph, a new categorical variable was generated based on whether or not a metacritic score was above or below the average score of 58.64727. I chose to use mean because this variable was normally distributed. I then selected for only the ratings \"G\",\"PG\", \"PG-13\",and R\" because these are the predominant rating categories, and there was not a uniform definition/criteria for \"Unrated\"\", \"Not Rated\", and the other categories. I then created a bar chart that displays the average revenue in millions for both the high and low metascore among each classification of rating. I found this graph to be interesting, because it makes logical sense. Across all the rating categories, the more highly rated movies genrated the most money. This implies that people are more inclined to see movies that are more highly rated. Furthermore, the movies with the fewest age restiction generate the most money and as age restictions become more strict, less money is made. This is something that could be further studied among even more movies. If this holds true, directors and writers may have second-thoughts about a few choice scenes or words that causes a movie to be categorized as R rather than PG-13.</p>\n\n```{r, echo=FALSE}\n\nGenresOfInterest <- c(\"Action\", \"Comedy\")\ndf_vis <- df %>% filter(Genre %in% GenresOfInterest)\nggplot(df_vis, aes(month))+\ngeom_bar(aes(fill=Genre))+\ntheme(axis.text.x = element_text(angle=45, hjust=1),panel.background = element_rect(fill = \"black\"))+ scale_fill_brewer(palette=\"Spectral\")+ xlab(\"Month\")+ggtitle(\"Number of Movies By Month Over the Years 2006-2016\")+ ylab(\"Number of Movies\")+ scale_fill_brewer(palette = \"Spectral\")+ scale_y_continuous(breaks = c(0, 10, 20, 30, 40, 50, 60))\n```\n<p style=\"color:orange\">This second graph focused on the amount of movies generated for two notoriously popular movie categories, Action and Comedy, over a year timespan. The summer months were the most popular for generating movies, which is likely targeting greater freetime among those who get summers off. The bulk of Action movies are released between May and August. There is a large surge in comedy movies for June. You can also see a greater pick up in movies put out during November and December which is typically referred to as \"Oscar season.\" An overall trend for this graph is that there are more Action movies released than comedy for a majority of the months.</p>\n\n\n\n\n\n```{r}\n\n\ndf_vis %>% ggplot(aes(budget, gross, color = Genre)) + \n  geom_point()  + scale_color_brewer(palette = \"Spectral\")+theme_dark()+ xlab(\"Budget\")+ggtitle(\"Gross Revenue vs. Budget\")+ ylab(\"Revenue\")+ scale_x_log10() + scale_y_log10() + geom_smooth(method = lm)\n\n\n\n\n```\n\n\n\n<p style=\"color:orange\">This graph essentially gives a visualization to the profits from these movies. The x-axis the composed of the budgets reported for the movies and the y-axis is gross revenue generated. I focused on the Action and Comdey categories once again. An overall trend seems to be a higher revenue generated by movies with highest budgets. There is a large number of comedy budgets that receive a lower funding comparatively, but are still doing well in the box offices. Action movies tending to cost more makes sense when you think about  stunt doubles, more skilled production teams/equipment, and special effects adding to the cost. I added the linear regression line because it helps visualize that among a majority of the budgets, Comedy is generating more revenue than Action movies.</p>\n\n\n```{r}\ndoublefeature_6 <- doublefeature_5%>% mutate(Actors=paste(unlist(Actors),collapse=\", \" ), Genre=paste(unlist(Genre),collapse=\", \" ))%>%\n  distinct(doublefeature_6, Title, writer, .keep_all = TRUE)\n\nmycor <- doublefeature_6[, c(1,4,17, 11,18, 20,21)]\nhead(mycor)\n\n\ncormat <- round(cor(mycor),2)\nhead(cormat)\n\nmelted_cormat <- melt(cormat)\nhead(melted_cormat)\n\n\n\n\n# Get lower triangle of the correlation matrix\n  get_lower_tri<-function(cormat){\n    cormat[upper.tri(cormat)] <- NA\n    return(cormat)\n  }\n  # Get upper triangle of the correlation matrix\n  get_upper_tri <- function(cormat){\n    cormat[lower.tri(cormat)]<- NA\n    return(cormat)\n  }\n  \n  \n  upper_tri <- get_upper_tri(cormat)\nupper_tri\n\n\n\nmelted_cormat <- melt(upper_tri, na.rm = TRUE)\n\n\n\nHeatmap <- melted_cormat%>% ggplot(aes(Var2, Var1, fill = value))+\n geom_tile(color = \"black\")+\n scale_fill_gradient2(low = \"black\", high = \"orange\", mid = \"white\", \n   midpoint = 0, limit = c(-1,1), space = \"Lab\", \n   name=\"Pearson\\nCorrelation\") +\n  theme_dark()+ \n theme(axis.text.x = element_text(angle = 45, vjust = 1, \n    size = 10, hjust = 1))+\n coord_fixed()+ \ngeom_text(aes(Var2, Var1, label = value), color = \"black\", size = 3)\n\nHeatmap +\ntheme(\n  axis.title.x = element_blank(),\n  axis.title.y = element_blank(),\n  panel.grid.major = element_blank(),\n  panel.border = element_blank(),\n  panel.background = element_rect(fill = \"dark grey\"),\n  axis.ticks = element_blank(),\n  legend.justification = c(1, 0),\n  legend.position = c(0.6, 0.7),\n  legend.direction = \"horizontal\")+\n  guides(fill = guide_colorbar(barwidth = 7, barheight = 1,\n                title.position = \"top\", title.hjust = 0.5))\n\n```\n<p style=\"color:orange\">This last graph is a correlation heat matrix for all the numeric variables. I generated it by selecting my numeric variables and then generating their correlation matrix. For easier viewing, I removed the upper triangle, since it is just a reflection of the lower triangle. The strongest correlations were between Profit and gross at .8, score and Metascore at .73, and budget and gross revenue at .69. These relationships have been prominent throughout this analysis and the heat map does a good job of illustrating the strength of these. I have largely ignored runtime throughout this analysis, because I orginally thought it would be irrelevant. However, this heat map reveals its correlation with budget. This relationship makes sense, because a larger budget will be able to pay for more days of filming and for larger production teams, which can help translate to a movie with more minutes.</p> \n\n\n\n##Dimensionality Reduction\n\n\n\n```{r}\n\n\n\n doublefeature_6 %>% select(c(gross, budget, Metascore, score))%>% cor()\n\n\n \n \n \ndr_pca<- doublefeature_6 %>% select(c(gross, budget, Metascore, score))%>% mutate(gross= sqrt(gross), budget=sqrt(budget))%>% scale() %>% princomp()\n\nsummary(dr_pca,loadings = T)\n\n\neigval<-dr_pca$sdev^2 #square to convert SDs to eigenvalues\nvarprop=round(eigval/sum(eigval),2) #proportion of var explained by each PC\nggplot()+geom_bar(aes(y=varprop,x=1:4),stat=\"identity\")+xlab(\"\")+geom_path(aes(y=varprop,x=1:4))+\n geom_text(aes(x=1:4,y=varprop,label=round(varprop,2)),vjust=1,col=\"white\",size=5)+\n scale_y_continuous(breaks=seq(0,.6,.2),labels = scales::percent)+\n scale_x_continuous(breaks=1:10)\n#justified to keep two \n```\n<p style=\"color:orange\">In the first step of this dimensionality reduction, I put both actors and genres back into their original list form so that each movie would only be counted once. I selected Metascore, IMDb score, budget, and gross revenue. I then viewed the correlations of these variables. Gross revenue and budget were most strongly correlated. I then prepared the data for the principal component analysis. First, I took the square root of both the budget and revenue columns since these two were strongly positively skewed. I then scaled all four columns. I then used princomp() on my scaled values in order to calculate the covariance matrix and eigenvectors. Viewing these values, it looks like PC1 represents the general popularity of a film. Each variable is positive and similar in magnitude with score and gross revenue being the closest. In general, movies scoring high on PC1 will have high budgets, high scores, and high gross revenues, while the lowest scores will be opposite on all accounts. PC2 on the other hand is a general budget and revenue vs. scoring axis. On PC2 a higher score means a higher budget and gross revenue with lower viewer/critic scores. Lower scores on this axis have lower budgets and revenues, but higher scores. PC3 is a Metascore vs. score axis. Higher scores here mean higher critic ratings and lower viewer ratings. PC4 is a budget vs gross revenue axis. High scores here mean low budgets, but higher revenues. I then generated a scree plot in order to choose the number of principal components. Since over 80% of the variance is present in the first two PC's, I kept 2 PC's.</p>\n\n```{r}\n#Plot Loadings\n\ndr_pca$loadings[1:4,1:2]%>%as.data.frame%>%rownames_to_column%>%\nggplot()+geom_hline(aes(yintercept=0),lty=2)+\n geom_vline(aes(xintercept=0),lty=2)+ylab(\"PC2\")+xlab(\"PC1\")+\n geom_segment(aes(x=0,y=0,xend=Comp.1,yend=Comp.2),arrow=arrow())+\n geom_label(aes(x=Comp.1*1.1,y=Comp.2*1.1,label=rowname))+theme_dark()\n```\n\n<p style=\"color:orange\">I then computed the new dataset with PC scores for each observation. The first graph I generated was the loadings plot. In this plot, Metascore and score were the most highly correlated, having the smallest angle. Budget and gross revenue were also strongly correlated. This graph gives visualization to how variables are contributing to separating the data.</p>\n\n\n\n\n```{r}\n## PC scores plot\n\n\nresults <- dr_pca<-data.frame(PC1=dr_pca$scores[,1], PC2=dr_pca$scores[,2])\nggplot(dr_pca,aes(PC1, PC2))+geom_point()+ggtitle(\"Principal Component Analysis (PC2 vs PC1)\")\n\n\n\n```\n\n<p style=\"color:orange\">This second graph plots the data onto pricipal component 1 and 2. In this graph, as you increase across the x-axis, the general popularity (score, Metascore, budget, and profit) of the movie increases. At the right of the x-axis is where you find movies like Avengers. As you move up the y-axis, budgets and revenues rise, while scores fall. The top of the y-axis is where you find movies like transformers. </p>\n\n \n\n```{r}\n\n\n\nName<-doublefeature_6$Title\n\n\ndr_pca%>%as.data.frame%>%cbind(Name,.)%>%top_n(3,PC1) #highest on PC1\ndr_pca%>%as.data.frame%>%cbind(Name,.)%>%top_n(3,wt=desc(PC1)) #lowest on PC1\n\n\ndr_pca%>%as.data.frame%>%cbind(Name,.)%>%top_n(3,wt=PC2) #highest on PC2\ndr_pca%>%as.data.frame%>%cbind(Name,.)%>%top_n(3,wt=desc(PC2)) #lowest on PC2\n\n\n\n\ndoublefeature_6%>%filter(Name%in%c(\"The Dark Knight\",\"Avatar\",\"Toy Story 3\"))%>% select(Title, gross, budget, score, Metascore)\n\n\n\ndoublefeature_6%>%filter(Name%in%c(\"Disaster Movie\",\"Movie 43\",\"The Disappointments Room\"))%>% select(Title, gross, budget, score, Metascore)\n\n\n```\n<p style=\"color:orange\"> I went to the original dataset and pulled the top three and bottom three scores for each principal component. Viewing a specific movie's information along with how it scored on the PC's, helps visualize how these variations are being sorted out. The highest scorers on the  first principal component scored well across the boards with high budgets, scores, metascores, and revenue. The lowest scores on the first PC likewise scores poorly across the boards. We even get to see Disaster Movie again, which was summarized above for scoring poorly with a 1.9/10 from the critics.</p>\n\n```{r}\ndoublefeature_6%>%filter(Name%in%c(\"Transformers: Revenge of the Fallen\",\"Transformers: Age of Extinction\",\"Disaster Movie\"))%>% select(Title, gross, budget, score, Metascore)\n\n\ndoublefeature_6%>%filter(Name%in%c(\"Relatos salvajes\",\"Boyhood\", \"Moonlight\"))%>% select(Title, gross, budget, score, Title, Metascore)\n\n```\n\n\n <p style=\"color:orange\">Transformers and Boyhood being on opposite ends on PC2 demonstrates the high budget/gross revenue vs. low score aspect of this axis. Transformers: Revenge of the Fallen had a budget of 200 milion dollars, gross revenue of 402 million dollars and received scores as low as 35/100 from Metacritics. Boyhood, on the other hand, had a budget of 4 million dollars, a gross revenue of 25 million dollars, and received perfect scores from critics. Furthermore, the lowest score, Relatos salvajes had a very small budget, comparatively, but still had a high viewer score and decent Metascore. Distaster Movie's top presence on this principal component makes sense because it had the lowest overall score, still had a high budget and gross revenue.</p>\n\n\n\n\n\n\n\n\n\n\nNote that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.\n",
    "created" : 1575566703536.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3978194132",
    "id" : "46F19372",
    "lastKnownWriteTime" : 1575580503,
    "last_content_update" : 1575580503504,
    "path" : "~/Desktop/Project1.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}