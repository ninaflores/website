"0","library(glmnet) "
"0","surveydata$SCHCOMP <- factor(surveydata$SCHCOMP)"
"0","surveydata$MARSTAT <- factor(surveydata$MARSTAT)"
"0","surveydata$PA_EDU <- factor(surveydata$PA_EDU)"
"0","surveydata$PART_EDU <- factor(surveydata$PART_EDU)"
"0","surveydata$NEIGHCOMP <- factor(surveydata$NEIGHCOMP)"
"0","surveydata$JOBCOMP <- factor(surveydata$JOBCOMP)"
"0","surveydata$LIVEWT <- factor(surveydata$LIVEWT)"
"0","surveydata$CH_GEN <- factor(surveydata$CH_GEN)"
"0","surveydata <- surveydata %>% drop_na(totbpi)"
"0","surveybpi<- surveydata %>% mutate(totbpi = ifelse(totbpi >= mean(totbpi), 1, 0))"
"0","surveybpi <- surveybpi%>% drop_na(PA_AGE, LIVEWT, CH_GEN,  PA_EDU, PART_EDU, MARSTAT,   TOTIVP, CRPR_TOT, RAC_SOC, CUL_SOC, MMRI, vicarious, pdisc, cdisc, TOTRCON, Q232, Q233, totbpi,recodedgpa, NEIGHCOMP, JOBCOMP, SCHCOMP, recodedincome,  COUNTRY, cdisc_centered )"
"0","surveybpi <- surveybpi %>% dplyr::select(-cdisc)"
"0","               "
"0","set.seed(1234)"
"0","fiteverything <- glm(totbpi~., data = surveybpi, family = ""binomial"")"
"0","y<-as.matrix(surveybpi$totbpi)  ###save response variable "
"0","x<-model.matrix(fiteverything)    ###save matrix of all predictors (dropping the response variable)"
"0","x<- x[,-1]"
"0","cv<-cv.glmnet(x,y,family=""binomial"")"
"0","lasso<-glmnet(x,y,family=""binomial"",lambda=cv$lambda.1se)"
"0","coef(lasso)"
"1","54 x 1 sparse Matrix of class ""dgCMatrix""
"
"1","              "
"1","          s0"
"1","
(Intercept)   "
"1","  2.96431079"
"1","
PA_GEN        "
"1","  .         "
"1","
PA_AGE        "
"1","  .         "
"1","
LIVEWT2       "
"1","  .         "
"1","
LIVEWT3       "
"1","  .         "
"1","
CH_GEN2       "
"1","  .         "
"1","
CH_GEN3       "
"1","  .         "
"1","
PA_EDU2       "
"1","  .         "
"1","
PA_EDU3       "
"1","  .         "
"1","
PA_EDU4       "
"1","  .         "
"1","
PA_EDU5       "
"1","  .         "
"1","
PA_EDU6       "
"1","  .         "
"1","
PA_EDU7       "
"1","  .         "
"1","
PA_EDU8       "
"1","  .         "
"1","
PA_EDU9       "
"1","  .         "
"1","
PART_EDU2     "
"1","  .         "
"1","
PART_EDU3     "
"1","  .         "
"1","
PART_EDU4     "
"1","  .         "
"1","
PART_EDU5     "
"1","  .         "
"1","
PART_EDU6     "
"1","  .         "
"1","
PART_EDU7     "
"1","  .         "
"1","
PART_EDU8     "
"1","  .         "
"1","
PART_EDU9     "
"1","  .         "
"1","
MARSTAT2      "
"1","  .         "
"1","
MARSTAT3      "
"1","  .         "
"1","
MARSTAT4      "
"1","  .         "
"1","
MARSTAT5      "
"1","  .         "
"1","
TOTIVP        "
"1","  .         "
"1","
CRPR_TOT      "
"1","  .         "
"1","
RAC_SOC       "
"1","  .         "
"1","
CUL_SOC       "
"1","  .         "
"1","
MMRI          "
"1"," -0.19744881"
"1","
vicarious     "
"1","  .         "
"1","
pdisc         "
"1","  0.03095143"
"1","
TOTRCON       "
"1","  .         "
"1","
Q232          "
"1","  .         "
"1","
Q233          "
"1","  .         "
"1","
NEIGHCOMP2    "
"1","  .         "
"1","
NEIGHCOMP3    "
"1","  .         "
"1","
NEIGHCOMP4    "
"1","  .         "
"1","
NEIGHCOMP5    "
"1","  .         "
"1","
JOBCOMP2      "
"1","  .         "
"1","
JOBCOMP3      "
"1","  .         "
"1","
JOBCOMP4      "
"1","  .         "
"1","
JOBCOMP5      "
"1","  .         "
"1","
JOBCOMP6      "
"1","  .         "
"1","
SCHCOMP2      "
"1","  .         "
"1","
SCHCOMP3      "
"1","  .         "
"1","
SCHCOMP4      "
"1","  .         "
"1","
SCHCOMP5      "
"1","  .         "
"1","
recodedincome "
"1","  .         "
"1","
recodedgpa    "
"1"," -0.78564297"
"1","
COUNTRY       "
"1","  .         "
"1","
cdisc_centered"
"1","  0.25639416"
"1","
"
"0","#plug in only what was significant"
"0","surveylasso <- surveybpi"
"0","surveylasso$PART_EDU4 <- ifelse(surveylasso$PART_EDU == ""4"", 1,0)"
"0","set.seed(1234)"
"0","k=10"
"0","data1<-surveylasso[sample(nrow(surveylasso)),] #randomly order rows"
"0","folds<-cut(seq(1:nrow(surveylasso)),breaks=k,labels=F) #create folds"
"0","diags<-NULL"
"0","for(i in 1:k){"
"0","  ## Create training and test sets"
"0","  train<-data1[folds!=i,] "
"0","  test<-data1[folds==i,]"
"0","  truth<-test$totbpi"
"0","  "
"0","  ## Train model on training set"
"0","  fit<-glm(totbpi ~   MMRI +pdisc + cdisc_centered+ recodedgpa, data = train, family = ""binomial"" )"
"0","  probs<-predict(fit,newdata = test,type=""response"")"
"0","  ## Test model on test set (save all k results)"
"0","  diags<-rbind(diags,class_diag(probs,truth))"
"0","}"
"0","apply(diags,2,mean) #average across all k results"
"1","      acc "
"1","     sens "
"1","     spec "
"1","      ppv "
"1","      auc "
"1","
"
"1","0.7351220 "
"1","0.4921522 "
"1","0.8729487 "
"1","0.6701876 "
"1","0.7677292 "
"1","
"
