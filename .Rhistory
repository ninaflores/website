## Create training and test sets
train<-data1[folds!=i,]
test<-data1[folds==i,]
truth<-test$totbpi
## Train model on training set
fit<-glm(totbpi ~ recodedgpa+ cdisc_centered +SCHCOMP+MARSTAT, data = train, family = "binomial" )
probs<-predict(fit,newdata = test,type="response")
## Test model on test set (save all k results)
diags<-rbind(diags,class_diag(probs,truth))
}
apply(diags,2,mean) #average across all k results
library(glmnet)
surveydata$SCHCOMP <- factor(surveydata$SCHCOMP)
surveydata$MARSTAT <- factor(surveydata$MARSTAT)
surveydata$PA_EDU <- factor(surveydata$PA_EDU)
surveydata$PART_EDU <- factor(surveydata$PART_EDU)
surveydata$NEIGHCOMP <- factor(surveydata$NEIGHCOMP)
surveydata$JOBCOMP <- factor(surveydata$JOBCOMP)
surveydata$LIVEWT <- factor(surveydata$LIVEWT)
surveydata$CH_GEN <- factor(surveydata$CH_GEN)
surveydata <- surveydata %>% drop_na(totbpi)
surveybpi<- surveydata %>% mutate(totbpi = ifelse(totbpi >= mean(totbpi), 1, 0))
surveybpi <- surveybpi%>% drop_na(PA_AGE, LIVEWT, CH_GEN,  PA_EDU, PART_EDU, MARSTAT,   TOTIVP, CRPR_TOT, RAC_SOC, CUL_SOC, MMRI, vicarious, pdisc, cdisc, TOTRCON, Q232, Q233, totbpi,recodedgpa, NEIGHCOMP, JOBCOMP, SCHCOMP, recodedincome,  COUNTRY, cdisc_centered )
surveybpi <- surveybpi %>% dplyr::select(-cdisc)
set.seed(1234)
fiteverything <- glm(totbpi~., data = surveybpi, family = "binomial")
y<-as.matrix(surveybpi$totbpi)  ###save response variable
x<-model.matrix(fiteverything)    ###save matrix of all predictors (dropping the response variable)
x<- x[,-1]
cv<-cv.glmnet(x,y,family="binomial")
lasso<-glmnet(x,y,family="binomial",lambda=cv$lambda.1se)
coef(lasso)
#plug in only what was significant
surveylasso <- surveybpi
surveylasso$PART_EDU4 <- ifelse(surveylasso$PART_EDU == "4", 1,0)
set.seed(1234)
k=10
data1<-surveylasso[sample(nrow(surveylasso)),] #randomly order rows
folds<-cut(seq(1:nrow(surveylasso)),breaks=k,labels=F) #create folds
diags<-NULL
for(i in 1:k){
## Create training and test sets
train<-data1[folds!=i,]
test<-data1[folds==i,]
truth<-test$totbpi
## Train model on training set
fit<-glm(totbpi ~ PART_EDU4 + MMRI +pdisc + cdisc_centered+ recodedgpa, data = train, family = "binomial" )
probs<-predict(fit,newdata = test,type="response")
## Test model on test set (save all k results)
diags<-rbind(diags,class_diag(probs,truth))
}
apply(diags,2,mean) #average across all k results
surveydata$pdisc_centered = surveydata$pdisc-mean(surveydata$pdisc, na.rm = T)
Income<- surveydata %>% mutate(recodedincome = ifelse(recodedincome >= mean(recodedincome), 1, 0))
Income <- Income%>% drop_na(PA_EDU, PA_GEN, pdisc_centered,  recodedincome, vicarious, PART_EDU)
Income$PA_EDU <- factor(Income$PA_EDU)
Income$PA_GEN <- factor(Income$PA_GEN)
fitinc <- glm(recodedincome ~ PA_EDU+ PART_EDU, data = Income, family = "binomial")
coeftest(fitinc)
exp(coeftest(fitinc))
Income$prob <- predict(fitinc, type = "response")
table(predict = as.numeric(Income$prob > 0.5), truth = Income$recodedincome) %>%
addmargins
class_diag(Income$prob, truth = Income$recodedincome)
logit <- predict(fitinc, response = "logit")
Income <- Income %>%drop_na(recodedincome)
Income$Income_Cat <- ifelse(Income$recodedincome > mean(Income$recodedincome), "above mean", "below mean")
ggplot(Income,aes(x= logit,fill=Income_Cat))+geom_density(alpha=.75)
ROCplot <- ggplot(Income) + geom_roc(aes(d = recodedincome, m = prob), n.cuts = 0)+ggtitle("Receiver Operating Characteristic Curve")
ROCplot
calc_auc(ROCplot)
Income$prob <- predict(fitinc, type = "response")
table(predict = as.numeric(Income$prob > 0.5), truth = Income$recodedincome) %>%
addmargins
class_diag(Income$prob, truth = Income$recodedincome)
logit <- predict(fitinc, response = "logit")
Income <- Income %>%drop_na(recodedincome)
Income$Income_Category <- ifelse(Income$recodedincome > mean(Income$recodedincome), "above mean", "below mean")
ggplot(Income,aes(x= logit,fill=Income_Category))+geom_density(alpha=.75)+ ggtitle("Prediction Model")
ROCplot <- ggplot(Income) + geom_roc(aes(d = recodedincome, m = prob), n.cuts = 0)+ggtitle("Receiver Operating Characteristic Curve")
ROCplot
calc_auc(ROCplot)
surveygpa <- surveydata %>% drop_na(recodedgpa)
surveygpa<- surveygpa %>% mutate(recodedgpa = ifelse(recodedgpa >= mean(recodedgpa), 1, 0))
surveygpa <- surveygpa%>% drop_na(PA_AGE, LIVEWT, CH_GEN,  PA_EDU, PART_EDU, MARSTAT,   TOTIVP, CRPR_TOT, RAC_SOC, CUL_SOC, MMRI, vicarious, pdisc, cdisc, TOTRCON, Q232, Q233, totbpi,recodedgpa, NEIGHCOMP, JOBCOMP, SCHCOMP, recodedincome,  COUNTRY )
set.seed(348)
fiteverything <- glm(recodedgpa~., data = surveygpa, family = "binomial")
y<-as.matrix(surveygpa$recodedgpa)  ###save response variable
x<-model.matrix(fiteverything)    ###save matrix of all predictors (dropping the response variable)
x<- x[,-1]
cv<-cv.glmnet(x,y,family="binomial")
lasso<-glmnet(x,y,family="binomial",lambda=cv$lambda.1se)
coef(lasso)
Income$SCHCOMP <- factor(Income$SCHCOMP)
Income$MARSTAT <- factor(Income$MARSTAT)
Income$PA_EDU <- factor(Income$PA_EDU)
Income$PART_EDU <- factor(Income$PART_EDU)
Income$NEIGHCOMP <- factor(Income$NEIGHCOMP)
Income$JOBCOMP <- factor(Income$JOBCOMP)
Income$LIVEWT <- factor(Income$LIVEWT)
Income$CH_GEN <- factor(Income$CH_GEN)
surveydata <- surveydata %>% drop_na(recodedincome)
surveyinc<- surveydata %>% mutate(recodedincome = ifelse(recodedincome > mean(recodedincome), 1, 0))
surveyinc <- surveyinc %>% filter(JOBCOMP != 6)
surveyinc <- surveyinc%>% drop_na(PA_AGE, LIVEWT, CH_GEN,  PA_EDU, PART_EDU, MARSTAT,   TOTIVP, CRPR_TOT, RAC_SOC, CUL_SOC, MMRI, vicarious, pdisc, cdisc, TOTRCON, Q232, Q233, totbpi,recodedgpa, NEIGHCOMP, JOBCOMP, SCHCOMP, recodedincome,  COUNTRY )
set.seed(1234)
fiteverything <- glm(recodedincome~., data = surveyinc, family = "binomial")
y<-as.matrix(surveyinc$recodedincome)  ###save response variable
x<-model.matrix(fiteverything)    ###save matrix of all predictors (dropping the response variable)
x<- x[,-1]
cv<-cv.glmnet(x,y,family="binomial")
lasso<-glmnet(x,y,family="binomial",lambda=cv$lambda.1se)
coef(lasso)
surveyinc$PA_EDU3 <- ifelse(surveyinc$PA_EDU == "3", 1,0)
surveyinc$PA_EDU4 <- ifelse(surveyinc$PA_EDU == "4", 1,0)
surveyinc$PA_EDU5 <- ifelse(surveyinc$PA_EDU == "5", 1,0)
surveyinc$PA_EDU9 <- ifelse(surveyinc$PA_EDU == "9", 1,0)
surveyinc$PART_EDU2 <- ifelse(surveyinc$PART_EDU == "2", 1,0)
surveyinc$PART_EDU3 <- ifelse(surveyinc$PART_EDU == "3", 1,0)
surveyinc$PART_EDU7 <- ifelse(surveyinc$PART_EDU == "7", 1,0)
surveyinc$PART_EDU8 <- ifelse(surveyinc$PART_EDU == "8", 1,0)
surveyinc$PART_EDU6 <- ifelse(surveyinc$PART_EDU == "6", 1,0)
surveyinc$MARSTAT2 <- ifelse(surveyinc$MARSTAT == "2", 1,0)
set.seed(1234)
k=10
data1<-surveyinc[sample(nrow(surveyinc)),] #randomly order rows
folds<-cut(seq(1:nrow(surveyinc)),breaks=k,labels=F) #create folds
diags<-NULL
for(i in 1:k){
## Create training and test sets
train<-data1[folds!=i,]
test<-data1[folds==i,]
truth<-test$recodedincome
## Train model on training set
fit<-glm(recodedincome ~ PA_EDU3+ PA_EDU4 + PA_EDU5+ PA_EDU9 + PART_EDU2+ PART_EDU3+ PART_EDU7+ PART_EDU8+ PART_EDU6+ MARSTAT2, data = train, family = "binomial" )
probs<-predict(fit,newdata = test,type="response")
## Test model on test set (save all k results)
diags<-rbind(diags,class_diag(probs,truth))
}
apply(diags,2,mean) #average across all k results
surveydata$pdisc_centered = surveydata$pdisc-mean(surveydata$pdisc, na.rm = T)
Income<- surveydata %>% mutate(recodedincome = ifelse(recodedincome >= mean(recodedincome), 1, 0))
Income <- Income%>% drop_na(PA_EDU, PA_GEN, pdisc_centered,  recodedincome, vicarious, PART_EDU)
Income$PA_EDU <- factor(Income$PA_EDU)
Income$PA_GEN <- factor(Income$PA_GEN)
fitinc <- glm(recodedincome ~ PA_EDU+ PART_EDU, data = Income, family = "binomial")
coeftest(fitinc)
exp(coeftest(fitinc))
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
mycor <- data[, c(1:9)]
cormat <- round(cor(mycor), 2)
mycor
library(dplyr)
library(MASS)
library(ggplot2)
library(lmtest)
data<-biopsy%>%transmute(clump_thickness=V1,
cell_uniformity=V2,
marg_adhesion=V4,
bland_chromatin=V7,
outcome=class,
y=as.numeric(outcome)-1)
head(data)
mycor <- data[, c(1:9)]
mycor <- data[, c(1:8)]
data
mycor <- data[, c(1:5)]
mycor
cormat <- round(cor(mycor), 2)
mycor
library(dplyr)
library(MASS)
library(ggplot2)
library(lmtest)
data<-biopsy%>%transmute(clump_thickness=V1,
cell_uniformity=V2,
marg_adhesion=V4,
bland_chromatin=V7,
outcome=class,
y=as.numeric(outcome)-1)
head(data)
mycor <- data[, c(1:5)]
mycor
cormat <- round(cor(mycor), 2)
View(data)
mycor <- data[, c(-5)]
mycor
cormat <- round(cor(mycor), 2)
melted_cormat <- melt(cormat)
library(reshape2)
mycor <- data[, c(-5)]
mycor
cormat <- round(cor(mycor), 2)
melted_cormat <- melt(cormat)
melted_cormat <- melt(upper_tri, na.rm = TRUE)
library(reshape2)
mycor <- data[, c(-5)]
mycor
cormat <- round(cor(mycor), 2)
melted_cormat <- melt(cormat)
upper_tri <- get_upper_tri(cormat)
?biopsy
fit<-glm(y~marg_adhesion,data=data,family=binomial(link="logit"))
coeftest(fit)
fit<-glm(y~marg_adhesion,data=data,family=binomial(link="logit"))
coeftest(fit)
exp(coef(fit))
-3.125040 + 0.965803 * 10
predict(fit, newdata=data.frame(clump_thickness=10), type= "link")
predict(fit, newdata=data.frame(marg_adhesion=10), type= "link")
logit <- predict(fit, response = "logit")
ggplot(data, aes(x = logit, fill = outcome)) + geom_density(alpha = 0.75) +
ggtitle("Prediction Model")
logit <- predict(fit, response = "logit")
ggplot(data, aes(x = logit, fill = outcome)) + geom_density(alpha = 0.75) +
ggtitle("Prediction Model")
fit<-glm(y~cell_uniformity,data=data,family=binomial(link="logit"))
coeftest(fit)
exp(coef(fit))
logit <- predict(fit, response = "logit")
ggplot(data, aes(x = logit, fill = outcome)) + geom_density(alpha = 0.75) +
ggtitle("Prediction Model")
fit<-glm(y~clump_thickness,data=data,family=binomial(link="logit"))
coeftest(fit)
exp(coef(fit))
logit <- predict(fit, response = "logit")
ggplot(data, aes(x = logit, fill = outcome)) + geom_density(alpha = 0.75) +
ggtitle("Prediction Model")
fit<-glm(y~bland_chromatin,data=data,family=binomial(link="logit"))
coeftest(fit)
exp(coef(fit))
logit <- predict(fit, response = "logit")
ggplot(data, aes(x = logit, fill = outcome)) + geom_density(alpha = 0.75) +
ggtitle("Prediction Model")
fit2<-glm(y~clump_thickness+marg_adhesion, family="binomial", data=data)
coeftest(fit2)
patient1<-data.frame(clump_thickness=8,
marg_adhesion=3)
predict(fit2, newdata=patient1,type = "response")
seq1="ACGCTTACCG"
seq2="AGCCTACCCC"
# Fill in the first row
for j in range(0, n + 1): score[0][j] = gap_penalty * j
[Caption for the picture.](/static/img/compbioexample.png)
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
knitr::include_graphics("compbioexample.png")
knitr::include_graphics("compbioexample.png")
blogdown::serve_site()
fit<-glm(y~marg_adhesion,data=data,family=binomial(link="logit"))
coeftest(fit)
exp(coef(fit))
exp(6.53299)
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
fit<-glm(y~marg_adhesion,data=data,family=binomial(link="logit"))
coeftest(fit)
exp(coef(fit))
blogdown::serve_site()
library(readr)
X2015sharks <- read_csv("~/Desktop/sharks/2015sharks.csv")
View(X2015sharks)
sharks2015 <- X2015sharks
head(sharks2015)
knitr::opts_chunk$set(echo = TRUE)
sharks2015 <- X2015sharks
head(sharks2015)
library(readr)
X2016shark <- read_csv("~/Desktop/sharks/2016shark.csv")
View(X2016shark)
sharks2015 <- X2015sharks
sharks2016<-X2016sharks
sharks2015 <- X2015sharks
sharks2016<-X2016shark
sharks2015 <- X2015sharks
sharks2016<-X2016shark
testsharks <- full_join(sharks2015, sharks2016, by="SURVEY DATE:")
View(testsharks)
sharks2015 <- X2015sharks
sharks2016<-X2016shark
testsharks <- full_join(sharks2015, sharks2016, by=c(1:56))
sharks2015 <- X2015sharks
sharks2016<-X2016shark
testsharks <- full_join(sharks2015, sharks2016, by=c())
sharks2015$`NUMBER OF SANDBAR MALES` <- sharks2015$`NUMBER OF SANDBAR MALES`.as.numeric
sharks2015$`NUMBER OF SANDBAR MALES` <- as.numeric(sharks2015$`NUMBER OF SANDBAR MALES`)
testsharks <- full_join(sharks2015, sharks2016, by=c())
sharks2016$`NUMBER OF SANDBAR MALES` <- as.numeric(sharks2015$`NUMBER OF SANDBAR MALES`)
sharks2016$`NUMBER OF SANDBAR MALES`
as.numeric(sharks2015$`NUMBER OF SANDBAR MALES`)
testsharks <- full_join(sharks2015, sharks2016, by=c())
sharks2015 <- X2015sharks
sharks2016<-X2016shark
sharks2016$`NUMBER OF SANDBAR MALES` <- as.numeric(sharks2015$`NUMBER OF SANDBAR MALES`)
sharks2016$`NUMBER OF SANDBAR MALES` <- as.numeric(sharks2016$`NUMBER OF SANDBAR MALES`)
sharks2016$`NUMBER OF SANDBAR MALES`
testsharks <- full_join(sharks2015, sharks2016, by=c())
sharks2015 <- X2015sharks
sharks2016<-X2016shark
sharks2016$`NUMBER OF SANDBAR MALES` <- as.numeric(sharks2016$`NUMBER OF SANDBAR MALES`)
sharks2016$`NUMBER OF GALAPAGOS FEMALES` <- as.numeric(sharks2016$`NUMBER OF GALAPAGOS FEMALES`)
testsharks <- full_join(sharks2015, sharks2016, by=c())
sharks2015 <- X2015sharks
sharks2016<-X2016shark
sharks2016$`NUMBER OF SANDBAR MALES` <- as.numeric(sharks2016$`NUMBER OF SANDBAR MALES`)
sharks2016$`NUMBER OF GALAPAGOS FEMALES` <- as.numeric(sharks2016$`NUMBER OF GALAPAGOS FEMALES`)
sharks2016$`NUMBER OF TIGER MALES` <- as.numeric(sharks2016$`NUMBER OF TIGER MALES`)
testsharks <- full_join(sharks2015, sharks2016, by=c())
sharks2015 <- X2015sharks
sharks2016<-X2016shark
sharks2016$`NUMBER OF SANDBAR MALES` <- as.numeric(sharks2016$`NUMBER OF SANDBAR MALES`)
sharks2016$`NUMBER OF GALAPAGOS FEMALES` <- as.numeric(sharks2016$`NUMBER OF GALAPAGOS FEMALES`)
sharks2016$`NUMBER OF TIGER MALES` <- as.numeric(sharks2016$`NUMBER OF TIGER MALES`)
sharks2016$`NUMBER OF TIGER FEMALES` <- as.numeric(sharks2016$`NUMBER OF TIGER FEMALES`)
testsharks <- full_join(sharks2015, sharks2016, by=c())
testsharks
View(testsharks)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
library(readr)
X2017shark <- read_csv("~/Desktop/sharks/2017shark.csv")
View(X2017shark)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
library(readr)
X2017sharkoldformat <- read_csv("~/Desktop/sharks/2017sharkoldformat.csv")
View(X2017sharkoldformat)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
library(readr)
X2017sharknewformat <- read_csv("~/Desktop/sharks/2017sharknewformat.csv")
View(X2017sharknewformat)
old <-X2017oldsharkformat
old <-X2017sharkoldformat
new <- X2017sharknewformat
old <-X2017sharkoldformat
new <- X2017sharknewformat
full2017 <- full_join(old, new, by=c())
View(new)
View(old)
old <-X2017sharkoldformat
new <- X2017sharknewformat
old$`TOUR START TIME:` <- as.numeric(old$`TOUR START TIME:`)
full2017 <- full_join(old, new, by=c())
old <-X2017sharkoldformat
new <- X2017sharknewformat
new$`TOUR START TIME:` <- as.numeric(new$`TOUR START TIME:`)
full2017 <- full_join(old, new, by=c())
old <-X2017sharkoldformat
new <- X2017sharknewformat
new$`TOUR START TIME:` <- as.numeric(new$`TOUR START TIME:`)
new$`CURRENT (0=NONE - 10=STRONG)` <- as.numeric(new$`CURRENT (0=NONE - 10=STRONG)`)
full2017 <- full_join(old, new, by=c())
old <-X2017sharkoldformat
new <- X2017sharknewformat
new$`TOUR START TIME:` <- as.numeric(new$`TOUR START TIME:`)
new$`CURRENT (0=NONE - 10=STRONG)` <- as.numeric(new$`CURRENT (0=NONE - 10=STRONG)`)
new$`SHARKS` <- as.numeric(new$`SHARKS`)
full2017 <- full_join(old, new, by=c())
old <-X2017sharkoldformat
new <- X2017sharknewformat
new$`TOUR START TIME:` <- as.numeric(new$`TOUR START TIME:`)
new$`CURRENT (0=NONE - 10=STRONG)` <- as.numeric(new$`CURRENT (0=NONE - 10=STRONG)`)
old$`SHARKS` <- as.numeric(old$`SHARKS`)
full2017 <- full_join(old, new, by=c())
old <-X2017sharkoldformat
new <- X2017sharknewformat
new$`TOUR START TIME:` <- as.numeric(new$`TOUR START TIME:`)
new$`CURRENT (0=NONE - 10=STRONG)` <- as.numeric(new$`CURRENT (0=NONE - 10=STRONG)`)
old$`SHARKS` <- as.numeric(old$`SHARKS`)
old$`NUMBER OF GALAPAGOS FEMALES` <- as.numeric(old$`NUMBER OF GALAPAGOS FEMALES`)
full2017 <- full_join(old, new, by=c())
old <-X2017sharkoldformat
new <- X2017sharknewformat
new$`TOUR START TIME:` <- as.numeric(new$`TOUR START TIME:`)
new$`CURRENT (0=NONE - 10=STRONG)` <- as.numeric(new$`CURRENT (0=NONE - 10=STRONG)`)
old$`SHARKS` <- as.numeric(old$`SHARKS`)
old$`NUMBER OF GALAPAGOS FEMALES` <- as.numeric(old$`NUMBER OF GALAPAGOS FEMALES`)
old$`NUMBER OF SANDBAR MALES` <- as.numeric(old$`NUMBER OF SANDBAR MALES`)
full2017 <- full_join(old, new, by=c())
old <-X2017sharkoldformat
new <- X2017sharknewformat
new$`TOUR START TIME:` <- as.numeric(new$`TOUR START TIME:`)
new$`CURRENT (0=NONE - 10=STRONG)` <- as.numeric(new$`CURRENT (0=NONE - 10=STRONG)`)
old$`SHARKS` <- as.numeric(old$`SHARKS`)
old$`NUMBER OF GALAPAGOS FEMALES` <- as.numeric(old$`NUMBER OF GALAPAGOS FEMALES`)
new$`NUMBER OF SANDBAR MALES` <- as.numeric(new$`NUMBER OF SANDBAR MALES`)
full2017 <- full_join(old, new, by=c())
old <-X2017sharkoldformat
new <- X2017sharknewformat
new$`TOUR START TIME:` <- as.numeric(new$`TOUR START TIME:`)
new$`CURRENT (0=NONE - 10=STRONG)` <- as.numeric(new$`CURRENT (0=NONE - 10=STRONG)`)
old$`SHARKS` <- as.numeric(old$`SHARKS`)
old$`NUMBER OF GALAPAGOS FEMALES` <- as.numeric(old$`NUMBER OF GALAPAGOS FEMALES`)
new$`NUMBER OF SANDBAR MALES` <- as.numeric(new$`NUMBER OF SANDBAR MALES`)
new$`NUMBER OF SANDBAR FEMALES` <- as.numeric(new$`NUMBER OF SANDBAR FEMALES`)
full2017 <- full_join(old, new, by=c())
old <-X2017sharkoldformat
new <- X2017sharknewformat
new$`TOUR START TIME:` <- as.numeric(new$`TOUR START TIME:`)
new$`CURRENT (0=NONE - 10=STRONG)` <- as.numeric(new$`CURRENT (0=NONE - 10=STRONG)`)
old$`SHARKS` <- as.numeric(old$`SHARKS`)
old$`NUMBER OF GALAPAGOS FEMALES` <- as.numeric(old$`NUMBER OF GALAPAGOS FEMALES`)
new$`NUMBER OF SANDBAR MALES` <- as.numeric(new$`NUMBER OF SANDBAR MALES`)
new$`NUMBER OF SANDBAR FEMALES` <- as.numeric(new$`NUMBER OF SANDBAR FEMALES`)
new$`NUMBER OF TIGER MALES` <- as.numeric(new$`NUMBER OF TIGER MALES`)
new$`NUMBER OF TIGER FEMALES` <- as.numeric(new$`NUMBER OF TIGER FEMALES`)
full2017 <- full_join(old, new, by=c())
old <- old %>% select(-BEHAVIOR)
old <- old %>% select(c(-BEHAVIOR))
old <- old %>% dplyr::select(-BEHAVIOR)
old <-X2017sharkoldformat
new <- X2017sharknewformat
new$`TOUR START TIME:` <- as.numeric(new$`TOUR START TIME:`)
new$`CURRENT (0=NONE - 10=STRONG)` <- as.numeric(new$`CURRENT (0=NONE - 10=STRONG)`)
old$`SHARKS` <- as.numeric(old$`SHARKS`)
old$`NUMBER OF GALAPAGOS FEMALES` <- as.numeric(old$`NUMBER OF GALAPAGOS FEMALES`)
new$`NUMBER OF SANDBAR MALES` <- as.numeric(new$`NUMBER OF SANDBAR MALES`)
new$`NUMBER OF SANDBAR FEMALES` <- as.numeric(new$`NUMBER OF SANDBAR FEMALES`)
new$`NUMBER OF TIGER MALES` <- as.numeric(new$`NUMBER OF TIGER MALES`)
new$`NUMBER OF TIGER FEMALES` <- as.numeric(new$`NUMBER OF TIGER FEMALES`)
new$`BEHAVIOR` <- as.character(new$`BEHAVIOR`)
full2017 <- full_join(old, new, by=c())
old <-X2017sharkoldformat
new <- X2017sharknewformat
new$`TOUR START TIME:` <- as.numeric(new$`TOUR START TIME:`)
new$`CURRENT (0=NONE - 10=STRONG)` <- as.numeric(new$`CURRENT (0=NONE - 10=STRONG)`)
old$`SHARKS` <- as.numeric(old$`SHARKS`)
old$`NUMBER OF GALAPAGOS FEMALES` <- as.numeric(old$`NUMBER OF GALAPAGOS FEMALES`)
new$`NUMBER OF SANDBAR MALES` <- as.numeric(new$`NUMBER OF SANDBAR MALES`)
new$`NUMBER OF SANDBAR FEMALES` <- as.numeric(new$`NUMBER OF SANDBAR FEMALES`)
new$`NUMBER OF TIGER MALES` <- as.numeric(new$`NUMBER OF TIGER MALES`)
new$`NUMBER OF TIGER FEMALES` <- as.numeric(new$`NUMBER OF TIGER FEMALES`)
old$`BEHAVIOR` <- as.character(old$`BEHAVIOR`)
full2017 <- full_join(old, new, by=c())
full2017
sharks2015 <- X2015sharks
sharks2016<-X2016shark
sharks2016$`NUMBER OF SANDBAR MALES` <- as.numeric(sharks2016$`NUMBER OF SANDBAR MALES`)
sharks2016$`NUMBER OF GALAPAGOS FEMALES` <- as.numeric(sharks2016$`NUMBER OF GALAPAGOS FEMALES`)
sharks2016$`NUMBER OF TIGER MALES` <- as.numeric(sharks2016$`NUMBER OF TIGER MALES`)
sharks2016$`NUMBER OF TIGER FEMALES` <- as.numeric(sharks2016$`NUMBER OF TIGER FEMALES`)
testsharks <- full_join(sharks2015, sharks2016, by=c())
testsharks
sharks2016
sharks2015 <- X2015sharks
sharks2016<-X2016shark
sharks2016$`NUMBER OF SANDBAR MALES` <- as.numeric(sharks2016$`NUMBER OF SANDBAR MALES`)
sharks2016$`NUMBER OF GALAPAGOS FEMALES` <- as.numeric(sharks2016$`NUMBER OF GALAPAGOS FEMALES`)
sharks2016$`NUMBER OF TIGER MALES` <- as.numeric(sharks2016$`NUMBER OF TIGER MALES`)
sharks2016$`NUMBER OF TIGER FEMALES` <- as.numeric(sharks2016$`NUMBER OF TIGER FEMALES`)
testsharks <- full_join(sharks2015, sharks2016, by=c(1:56))
sharks2015 <- X2015sharks
sharks2016<-X2016shark
sharks2016$`NUMBER OF SANDBAR MALES` <- as.numeric(sharks2016$`NUMBER OF SANDBAR MALES`)
sharks2016$`NUMBER OF GALAPAGOS FEMALES` <- as.numeric(sharks2016$`NUMBER OF GALAPAGOS FEMALES`)
sharks2016$`NUMBER OF TIGER MALES` <- as.numeric(sharks2016$`NUMBER OF TIGER MALES`)
sharks2016$`NUMBER OF TIGER FEMALES` <- as.numeric(sharks2016$`NUMBER OF TIGER FEMALES`)
testsharks <- full_join(sharks2015, sharks2016, by=c(1:50))
sharks2015 <- X2015sharks
sharks2016<-X2016shark
sharks2016$`NUMBER OF SANDBAR MALES` <- as.numeric(sharks2016$`NUMBER OF SANDBAR MALES`)
sharks2016$`NUMBER OF GALAPAGOS FEMALES` <- as.numeric(sharks2016$`NUMBER OF GALAPAGOS FEMALES`)
sharks2016$`NUMBER OF TIGER MALES` <- as.numeric(sharks2016$`NUMBER OF TIGER MALES`)
sharks2016$`NUMBER OF TIGER FEMALES` <- as.numeric(sharks2016$`NUMBER OF TIGER FEMALES`)
testsharks <- full_join(sharks2015, sharks2016, by=c(.))
sharks2015 <- X2015sharks
sharks2016<-X2016shark
sharks2016$`NUMBER OF SANDBAR MALES` <- as.numeric(sharks2016$`NUMBER OF SANDBAR MALES`)
sharks2016$`NUMBER OF GALAPAGOS FEMALES` <- as.numeric(sharks2016$`NUMBER OF GALAPAGOS FEMALES`)
sharks2016$`NUMBER OF TIGER MALES` <- as.numeric(sharks2016$`NUMBER OF TIGER MALES`)
sharks2016$`NUMBER OF TIGER FEMALES` <- as.numeric(sharks2016$`NUMBER OF TIGER FEMALES`)
testsharks <- full_join(sharks2015, sharks2016)
testsharks
library(readr)
X2015sharks <- read_csv("~/Desktop/sharks/2015sharks.csv")
View(X2015sharks)
old <-X2017sharkoldformat
new <- X2017sharknewformat
new$`TOUR START TIME:` <- as.numeric(new$`TOUR START TIME:`)
new$`CURRENT (0=NONE - 10=STRONG)` <- as.numeric(new$`CURRENT (0=NONE - 10=STRONG)`)
old$`SHARKS` <- as.numeric(old$`SHARKS`)
old$`NUMBER OF GALAPAGOS FEMALES` <- as.numeric(old$`NUMBER OF GALAPAGOS FEMALES`)
new$`NUMBER OF SANDBAR MALES` <- as.numeric(new$`NUMBER OF SANDBAR MALES`)
new$`NUMBER OF SANDBAR FEMALES` <- as.numeric(new$`NUMBER OF SANDBAR FEMALES`)
new$`NUMBER OF TIGER MALES` <- as.numeric(new$`NUMBER OF TIGER MALES`)
new$`NUMBER OF TIGER FEMALES` <- as.numeric(new$`NUMBER OF TIGER FEMALES`)
old$`BEHAVIOR` <- as.character(old$`BEHAVIOR`)
full2017 <- full_join(old, new)
